
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000096  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a68  00000000  00000000  000000ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007ac  00000000  00000000  00000b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .comment      00000011  00000000  00000000  00001300  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>
#include <util/delay.h>

void main(void){
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
  70:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xFF;
  72:	84 bb       	out	0x14, r24	; 20

	for(;;){
		
//		PORTA = 0x0;
//		PORTB = 0x0;
		PORTC = 0x0;
  74:	15 ba       	out	0x15, r1	; 21
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  76:	ef e3       	ldi	r30, 0x3F	; 63
  78:	fc e9       	ldi	r31, 0x9C	; 156
  7a:	31 97       	sbiw	r30, 0x01	; 1
  7c:	f1 f7       	brne	.-4      	; 0x7a <main+0xe>
  7e:	00 c0       	rjmp	.+0      	; 0x80 <main+0x14>
  80:	00 00       	nop
		_delay_ms(200);
//		PORTA = 0xFF;
//		PORTB = 0xFF;	
		PORTC = 0xFF;
  82:	85 bb       	out	0x15, r24	; 21
  84:	ef e3       	ldi	r30, 0x3F	; 63
  86:	fc e9       	ldi	r31, 0x9C	; 156
  88:	31 97       	sbiw	r30, 0x01	; 1
  8a:	f1 f7       	brne	.-4      	; 0x88 <main+0x1c>
  8c:	00 c0       	rjmp	.+0      	; 0x8e <main+0x22>
  8e:	00 00       	nop
  90:	f1 cf       	rjmp	.-30     	; 0x74 <main+0x8>

00000092 <_exit>:
  92:	f8 94       	cli

00000094 <__stop_program>:
  94:	ff cf       	rjmp	.-2      	; 0x94 <__stop_program>
