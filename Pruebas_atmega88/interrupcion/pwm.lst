
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000090  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000a68  00000000  00000000  000000e4  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000007e7  00000000  00000000  00000b4c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	20 c0       	rjmp	.+64     	; 0x44 <__bad_interrupt>
   4:	1f c0       	rjmp	.+62     	; 0x44 <__bad_interrupt>
   6:	1e c0       	rjmp	.+60     	; 0x44 <__bad_interrupt>
   8:	1d c0       	rjmp	.+58     	; 0x44 <__bad_interrupt>
   a:	1c c0       	rjmp	.+56     	; 0x44 <__bad_interrupt>
   c:	1b c0       	rjmp	.+54     	; 0x44 <__bad_interrupt>
   e:	1a c0       	rjmp	.+52     	; 0x44 <__bad_interrupt>
  10:	19 c0       	rjmp	.+50     	; 0x44 <__bad_interrupt>
  12:	18 c0       	rjmp	.+48     	; 0x44 <__bad_interrupt>
  14:	17 c0       	rjmp	.+46     	; 0x44 <__bad_interrupt>
  16:	16 c0       	rjmp	.+44     	; 0x44 <__bad_interrupt>
  18:	15 c0       	rjmp	.+42     	; 0x44 <__bad_interrupt>
  1a:	14 c0       	rjmp	.+40     	; 0x44 <__bad_interrupt>
  1c:	13 c0       	rjmp	.+38     	; 0x44 <__bad_interrupt>
  1e:	12 c0       	rjmp	.+36     	; 0x44 <__bad_interrupt>
  20:	11 c0       	rjmp	.+34     	; 0x44 <__bad_interrupt>
  22:	10 c0       	rjmp	.+32     	; 0x44 <__bad_interrupt>
  24:	0f c0       	rjmp	.+30     	; 0x44 <__bad_interrupt>
  26:	0e c0       	rjmp	.+28     	; 0x44 <__bad_interrupt>
  28:	0d c0       	rjmp	.+26     	; 0x44 <__bad_interrupt>
  2a:	0c c0       	rjmp	.+24     	; 0x44 <__bad_interrupt>
  2c:	0b c0       	rjmp	.+22     	; 0x44 <__bad_interrupt>
  2e:	0a c0       	rjmp	.+20     	; 0x44 <__bad_interrupt>
  30:	09 c0       	rjmp	.+18     	; 0x44 <__bad_interrupt>
  32:	08 c0       	rjmp	.+16     	; 0x44 <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61
  40:	02 d0       	rcall	.+4      	; 0x46 <main>
  42:	24 c0       	rjmp	.+72     	; 0x8c <_exit>

00000044 <__bad_interrupt>:
  44:	dd cf       	rjmp	.-70     	; 0x0 <__vectors>

00000046 <main>:
#include <avr/io.h>
#include <util/delay.h>

int main(void)
{
    TCCR1A = ((1 << COM1A1)|(1 << COM1A0)|(1 << COM1B1)|(1 << COM1B0)|(0 << WGM11)|(1 << WGM10)); //COM1A1=1, COM1A0=1, COM1B1=1, COM1B0=1, WGM11=0, WGM10=1
  46:	81 ef       	ldi	r24, 0xF1	; 241
  48:	80 93 80 00 	sts	0x0080, r24
    TCCR1B = ((0 << WGM13)|(1 << WGM12)); //Timer Apagado WGM13=0, WGM12=1, CS12=0, CS11=0, CS10=0 
  4c:	88 e0       	ldi	r24, 0x08	; 8
  4e:	80 93 81 00 	sts	0x0081, r24
    
    
    // Configuración de dirección de puertos I/O
//    DDRA=0x00; // Puerto A como entrada
    DDRC=0xFF; // Puerto C como salida
  52:	8f ef       	ldi	r24, 0xFF	; 255
  54:	87 b9       	out	0x07, r24	; 7
    DDRB=0xFF;// Pin 3 y 4 del puerto B como salida
  56:	84 b9       	out	0x04, r24	; 4
//    PORTC=0x00; // Inicialización de salida del puerto C

//Hasta aca es un starup

    // Inicialización del PWM
    OCR1A = 127;
  58:	8f e7       	ldi	r24, 0x7F	; 127
  5a:	90 e0       	ldi	r25, 0x00	; 0
  5c:	90 93 89 00 	sts	0x0089, r25
  60:	80 93 88 00 	sts	0x0088, r24
    OCR1B = 127;
  64:	90 93 8b 00 	sts	0x008B, r25
  68:	80 93 8a 00 	sts	0x008A, r24
    TCNT1 = 0;
  6c:	10 92 85 00 	sts	0x0085, r1
  70:	10 92 84 00 	sts	0x0084, r1

    // Configuración del Timer 1:
    TCCR1B|= ((0<<CS12)|(0<<CS11)|(1<<CS10)); //Enciendo el Timer sin prescaler (001)
  74:	80 91 81 00 	lds	r24, 0x0081
  78:	81 60       	ori	r24, 0x01	; 1
  7a:	80 93 81 00 	sts	0x0081, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7e:	8f ef       	ldi	r24, 0xFF	; 255
  80:	93 eb       	ldi	r25, 0xB3	; 179
  82:	01 97       	sbiw	r24, 0x01	; 1
  84:	f1 f7       	brne	.-4      	; 0x82 <main+0x3c>
  86:	00 c0       	rjmp	.+0      	; 0x88 <main+0x42>
  88:	00 00       	nop
  8a:	f9 cf       	rjmp	.-14     	; 0x7e <main+0x38>

0000008c <_exit>:
  8c:	f8 94       	cli

0000008e <__stop_program>:
  8e:	ff cf       	rjmp	.-2      	; 0x8e <__stop_program>
